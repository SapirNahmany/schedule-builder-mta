[{"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\index.js":"1","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\App.js":"2","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\Navbar.js":"4","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\Sidebar.js":"5","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SharedSchedulers.js":"6","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\UploadForm.js":"7","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Home.js":"8","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectDoneCourses.js":"9","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\ScheduleCourses.js":"10","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\Navbar.style.js":"11","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Login.js":"12","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\HandleDatabase.js":"13","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Scheduler.js":"14","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Logout.js":"15","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectUsers.js":"16","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectCourses.js":"17","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectGroup.js":"18","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\PostInputModal.js":"19","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Cards.js":"20","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\courses\\DisplayCourses.js":"21","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\firebase-config.js":"22","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectCourse.js":"23","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectUser.js":"24","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SchedulerCourse.js":"25","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Group.js":"26","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\courses\\ElectiveCoursesTable.js":"27","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\courses\\MandatoryCoursesTable.js":"28"},{"size":598,"mtime":1631993270605,"results":"29","hashOfConfig":"30"},{"size":8729,"mtime":1631993270528,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1631993270674,"results":"32","hashOfConfig":"30"},{"size":913,"mtime":1631993270636,"results":"33","hashOfConfig":"30"},{"size":6626,"mtime":1631993270737,"results":"34","hashOfConfig":"30"},{"size":1600,"mtime":1632045115067,"results":"35","hashOfConfig":"30"},{"size":4633,"mtime":1631993271458,"results":"36","hashOfConfig":"30"},{"size":1694,"mtime":1631993270952,"results":"37","hashOfConfig":"30"},{"size":1596,"mtime":1631993271313,"results":"38","hashOfConfig":"30"},{"size":25673,"mtime":1632044909454,"results":"39","hashOfConfig":"30"},{"size":223,"mtime":1631993270654,"results":"40","hashOfConfig":"30"},{"size":1741,"mtime":1631993270979,"results":"41","hashOfConfig":"30"},{"size":347,"mtime":1631993270897,"results":"42","hashOfConfig":"30"},{"size":1697,"mtime":1631993271183,"results":"43","hashOfConfig":"30"},{"size":1738,"mtime":1631993271010,"results":"44","hashOfConfig":"30"},{"size":1434,"mtime":1631993271398,"results":"45","hashOfConfig":"30"},{"size":1333,"mtime":1631993271289,"results":"46","hashOfConfig":"30"},{"size":4921,"mtime":1631993271337,"results":"47","hashOfConfig":"30"},{"size":2348,"mtime":1631993271069,"results":"48","hashOfConfig":"30"},{"size":2623,"mtime":1631993270789,"results":"49","hashOfConfig":"30"},{"size":1240,"mtime":1631993271489,"results":"50","hashOfConfig":"30"},{"size":526,"mtime":1631993270846,"results":"51","hashOfConfig":"30"},{"size":1298,"mtime":1631993271258,"results":"52","hashOfConfig":"30"},{"size":691,"mtime":1631993271370,"results":"53","hashOfConfig":"30"},{"size":1504,"mtime":1631993271222,"results":"54","hashOfConfig":"30"},{"size":5041,"mtime":1631993270866,"results":"55","hashOfConfig":"30"},{"size":960,"mtime":1631993271523,"results":"56","hashOfConfig":"30"},{"size":1386,"mtime":1631993271539,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"ovkik2",{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\index.js",[],["127","128"],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\App.js",["129","130","131"],"import React from 'react';\nimport './App.css';\nimport { useState, useEffect } from 'react'\nimport ScheduleCourses from './components/ScheduleCourses'\nimport UploadForm from './components/UploadForm'\nimport SelectDoneCourses from './components/SelectDoneCourses'\nimport axios from 'axios';\nimport Sidebar from \"./Sidebar\";\nimport Navbar from \"./Navbar\";\nimport Home from './components/Home'\nimport SharedSchedulers from'./components/SharedSchedulers'\n\nconst adminMail = 'sadna2021mta@gmail.com'\n//default values to degree year and semester\nlet year = 1\nlet semester = 1\n\nfunction App(){\n  const [mandatoryCourses, setMandatoryCourses] = useState(null)\n  const [electiveCourses, setElectiveCourses] = useState(null)\n  const [userHaveSchedulerData, setUserHaveSchedulerData] = useState(false)\n  const [publishedSchedulersData, setPublishedSchedulersData] = useState([])\n  const [sharedSchedulersData, setSharedSchedulersData] = useState([])\n\n  const [user, setUser] = useState(null)\n  const [users, setUsers] = useState(null)\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const [showKey, setShowKey] = useState('home')\n\n  useEffect(async () => {\n    const schedulersDataRes = await fetch('/schedulersData')\n    const schedulersData = await schedulersDataRes.json()\n    console.log(\"Home Page schedulers: \", Object.values(schedulersData))\n    setPublishedSchedulersData(Object.values(schedulersData))\n\n    const usersRes = await fetch('/getUsersInfo')\n    const usersData = await usersRes.json()\n    console.log(Object.values(usersData))\n    setUsers(Object.values(usersData))\n  }, []);\n\n  const checkUserCoursesExists = async (uid) => {\n    var url = '/checkUserCourses/' + uid\n    const res = await fetch(url)\n    if(res.status === 200) //user database courses exists\n    {\n      console.log('User have courses.')\n      return true\n    }\n    if(res.status === 400)\n    {\n      return false\n    }\n  }\n\n  const checkUserSchedulerDataExists = async (uid) => {\n    var url = '/checkUserScheduleData/' + uid\n    const res = await fetch(url)\n    if(res.status === 200) //user database exists\n    {\n      console.log('User have scheduler data.')\n      return true\n    }\n    else\n    {\n      return false\n    }\n  }\n\n  const checkSharedSchedulersDataExists = async (uid) => {\n    var url = '/checkSharedScheduleData/' + uid\n    const res = await fetch(url)\n    if(res.status === 200) //user database exists\n    {\n      console.log('Shared scheduler data to user.')\n      return true\n    }\n    else\n    {\n      return false\n    }\n  }\n\n  //fetch from user database courses\n  const fetchUserMandadtoryCourses = async (uid) => {\n    var url = '/mandatoryCourses/' + uid \n    const res = await fetch(url)\n    const data = await res.json()\n    console.log(\"user mandatory courses: \", data.mandatoryCourses)\n    setMandatoryCourses(data.mandatoryCourses)\n  }\n  const fetchUserElectiveCourses = async (uid) => {\n    var url = '/electiveCourses/' + uid \n    const res = await fetch(url)\n    const data = await res.json()\n    console.log(\"user elective courses: \", data.electiveCourses)\n    setElectiveCourses(data.electiveCourses)\n  }\n  const fetchSharedSchedulers = async (uid) => {\n    var url = '/sharedSchedulersData/' + uid \n    const schedulersDataRes = await fetch(url)\n    const schedulersData = await schedulersDataRes.json()\n    console.log(\"shared schedulers2: \", Object.values(schedulersData))\n    setSharedSchedulersData(Object.values(schedulersData))\n  }\n\n  //fetch from newsletter database courses\n  const fetchMCourses = async () => {\n    const url = '/mandatoryCourses'\n    const res = await fetch(url)\n    const data = await res.json()\n    // init: adding needed fields to each object\n    const result = data.mandatoryCourses.map((v, index) => ({...v,\n        done: false,\n        id: index,\n\t\t    courseType: 'Mandatory'\n    }));\n    console.log(\"Mandatory Courses: \", result)\n    setMandatoryCourses(result)\n    return result\n  }\n\n  const fetchECourses = async () => {\n    var url = '/electiveCourses'\n    const res = await fetch(url)\n    const data = await res.json()\n    //adding needed fields to each object\n    const result = data.electiveCourses.map((v, index) => ({...v,\n        done: false,\n        id: index,\n\t\t    courseType: 'Elective'\n    }));\n    console.log(\"Elective Courses: \", result)\n    setElectiveCourses(result)\n  }\n\n  const defaultCheckDoneCourses = (courses) => {\n    courses?.map(course => {\n      if(course.year < year || (course.year == year && (course.semesters[0] < semester || course.semesters.length === 2))) {\n        courses[course.id].done = true\n        console.log(course.title + \" done.\")\n      }\n    })\n  }\n\n  const checkMandatoryCourse = (e, id) => {\n    mandatoryCourses[id].done = !mandatoryCourses[id].done\n    console.log(mandatoryCourses[id].title + \": \" + mandatoryCourses[id].done)\n  }\n  const checkElectiveCourse = (e, id) => {\n    electiveCourses[id].done = !electiveCourses[id].done\n    console.log(electiveCourses[id].title + \": \" + electiveCourses[id].done)\n  }\n\n  const updateUserDatabase = async () => {\n    const url = '/updateUserDatabase/' + user.uid\n    axios({\n      method: 'post',\n      url: url,\n      data: {\n        mandatoryCourses: {mandatoryCourses},\n        electiveCourses: {electiveCourses}\n      }\n    });\n  }\n\n  const handleFileSubmit = async (formYear, formSemester) => {\n    //e.preventDefault()\n    year = formYear\n    semester = formSemester\n    var mandatoryCourses_ = await fetchMCourses()\n    await fetchECourses()\n    defaultCheckDoneCourses(mandatoryCourses_)\n    setShowKey('select')\n  }\n\n  const handleSelectCoursesSubmit = () => {\n    if(user != null)\n      updateUserDatabase()\n    window.scrollTo(0, 0)\n    setShowKey('schedule')\n  }\n\n  const onLogin = async (userFromLogin) => {\n    const uid = userFromLogin.uid\n    if(userFromLogin.email === adminMail)\n      setIsAdmin(true)\n    setUser(userFromLogin)\n    const userHaveCourses = await checkUserCoursesExists(uid)\n    const userHaveSchedulerData_ = await checkUserSchedulerDataExists(uid)\n    const userHaveSharedSchedulersData_ = await checkSharedSchedulersDataExists(uid)\n    var KeyIsSet = false;\n\n    if(userHaveSharedSchedulersData_)\n    {\n      setShowKey('share')\n      KeyIsSet = true\n      await fetchSharedSchedulers(uid)\n    }\n\n    if(userHaveSchedulerData_ && userHaveCourses)\n    {\n      if(!KeyIsSet)\n        setShowKey('schedule')\n      setUserHaveSchedulerData(true)\n      await fetchUserMandadtoryCourses(uid)\n      await fetchUserElectiveCourses(uid)\n    }\n    else if(userHaveCourses)\n    {\n      if(!KeyIsSet)\n      setShowKey('select')\n      await fetchUserMandadtoryCourses(uid)\n      await fetchUserElectiveCourses(uid)\n    }\n    else if(!KeyIsSet) //user doesn't have any data\n      setShowKey('upload')\n  }\n\n  const onLogout = () => {\n    console.log(\"LOGOUT\")\n\t  setIsAdmin(false)\n    setUser(null)\n\n    setMandatoryCourses(null)// delete later\n    setElectiveCourses(null)// delete later\n    setShowKey('home') // delete later\n  }\n\n  return ( \n    <div style={appStyle} className=\"dashboard d-flex\">\n\t\t<Sidebar \n      activeKey={showKey}\n\t\t\thandleHomeClick={() => setShowKey('home')}\n\t\t\thandleUploadClick={() => setShowKey('upload')}\n\t\t\thandleSelectClick={() => setShowKey('select')}\n  \t\thandleScheduleClick={() => setShowKey('schedule')}\n      handleShareClick={() => setShowKey('share')}\n\t\t\tmandatoryCourses={mandatoryCourses}\n\t\t\telectiveCourses={electiveCourses}\n\t\t\tuser={user}\n\t\t\tisAdmin={isAdmin}\n\t\t\thandleLogin={onLogin}\n\t\t\thandleLogout={onLogout}\n\t\t/>\n\t\t<div style={navbarStyle}>\n\t\t\t<Navbar user={user}/>\n      <SharedSchedulers\n\t\t\t\tshow={showKey === 'share'}\n        sharedSchedulersData={sharedSchedulersData}\n        />\n\t\t\t<Home \n\t\t\t\tshow={showKey ===  'home'}\n        publishedSchedulersData={publishedSchedulersData}\n\t\t\t/>\t\n\t\t\t<UploadForm \n\t\t\t\tshow={showKey === 'upload'} \n\t\t\t\tonSubmit={handleFileSubmit}\n\t\t\t/>\n\t\t\t<SelectDoneCourses\n\t\t\t\tshow={showKey === 'select'}\n\t\t\t\tmandatoryCourses={mandatoryCourses} \n\t\t\t\telectiveCourses={electiveCourses} \n\t\t\t\tonMandatoryCourseChecked={checkMandatoryCourse} \n\t\t\t\tonElectiveCourseChecked={checkElectiveCourse} \n\t\t\t\tonSubmit={handleSelectCoursesSubmit}\n\t\t\t/>\n\t\t\t<ScheduleCourses \n\t\t\t\tshow={showKey === 'schedule'}\n        user={user}\n        users={users}\n        userHaveSchedulerData={userHaveSchedulerData}\n\t\t\t\tmandatoryCourses={mandatoryCourses}\n\t\t\t\telectiveCourses={electiveCourses} \n\t\t\t\tyear={year} \n\t\t\t\tsemester={semester}\n        />\n\n\t\t</div>\n    </div>\n  );\n}\n\nconst appStyle = {\n  backgroundColor: '#444',\n  color: 'white',\n\tdirection: 'rtl',\n\ttextAlign: 'right',\n  }\n\nconst navbarStyle = {\n\tflex:\"1 1 auto\", display:\"flex\", flexFlow:\"column\", height:\"100vh\", overflowY:\"hidden\"\n}\nexport default App;\n","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\Navbar.js",["132","133"],"import React from \"react\";\r\nimport { Header } from \"./Navbar.style\";\r\nimport { CDBNavbar, CDBInput } from \"cdbreact\";\r\n\r\nconst Navbar = ({user}) => {\r\n\r\n\treturn (\r\n        <Header style={{background:\"#222\", color:\"#fff\"}}>\r\n          <CDBNavbar dark expand=\"md\" scrolling >\r\n            <div className=\"ml-2\" style={{direction: 'ltr', fontFamily: \"Calibri\"}}>\r\n              {user && user.photoURL?\r\n              <div style={{padding: '8px', fontSize: '21px'}}>\r\n                <img alt=\"panelImage\" src={user.photoURL} style={{width:\"2.5rem\",height:\"2.5rem\", borderRadius: '50%'}}/>\r\n                {\" \"}{user.displayName}\r\n              </div>\r\n              : \r\n              <div style={{paddingTop: '11px'}}>\r\n                <h2 className='bi bi-person-circle'></h2>\r\n              </div>\r\n              }\r\n            </div>\r\n          </CDBNavbar>\r\n        </Header>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\Sidebar.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SharedSchedulers.js",["134","135","136"],"import SchedulerTable from './Scheduler'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst SharedSchedulers = ({show, sharedSchedulersData}) => { \r\n    return (\r\n        <>\r\n            {show?\r\n                <div style={{height:'100%'}}>\r\n                    <div style={{height:\"calc(100% - 64px)\", overflowY:\"scroll\"}}>\r\n                        <hr/>\r\n                        <h2 style={{paddingRight: '15px', fontFamily: 'Calibri light'}}>\r\n                            מערכות שעות ששותפו איתך:\r\n                        </h2>\r\n                        <hr/>\r\n                        {sharedSchedulersData?.map((schedulerData, idx) => (\r\n                            <Container key={idx} fluid style={{paddingLeft: '250px', paddingRight: '250px'}}>\r\n                                <div style={{padding: '8px', fontSize: '21px'}}>\r\n                                    <img src={schedulerData['photoURL']} style={{width:\"3.5rem\",height:\"3.5rem\", borderRadius: '50%'}}/>\r\n                                    {\" \"} שותף ע\"י {schedulerData['displayName']}  ({schedulerData['year']},  {schedulerData['semester']})\r\n                                </div>\r\n\r\n                                <SchedulerTable data={schedulerData['schedulerData']} height='800'/>\r\n                                <br/>\r\n                                <hr/>\r\n                            </Container>\r\n                         ))}\r\n                        \r\n                    </div>\r\n                </div>\r\n            : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SharedSchedulers","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\UploadForm.js",["137"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Select from 'react-select'\r\n\r\nconst UploadForm = ({show, onSubmit}) => {\r\n  //for input\r\n  const degreeYear = [\r\n    { value: 1, label: 'שנה ראשונה'},\r\n    { value: 2, label: 'שנה שנייה'},\r\n    { value: 3, label: 'שנה שלישית'}\r\n  ]\r\n\r\n  const degreeSemester = [\r\n      { value: 1, label:'סמסטר א\\''},\r\n      { value: 2, label: 'סמסטר ב\\''},\r\n  ]\r\n  const [year, setYear] = useState([degreeYear[0].value]);\r\n  const [semester, setSemester] = useState([degreeSemester[0].value]);\r\n\r\n  //for file\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('בחר/י ידיעון לימודים');\r\n  const [message, setMessage] = useState('');\r\n  const [messageVariant, setMessageVariant] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const [showSpinner, setShowSpinner] = useState(false)\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    setShowSpinner(true)\r\n\r\n    var fileUploadSuccess = true\r\n    try {\r\n      const res = await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setUploadPercentage(parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total)));\r\n        }\r\n      });\r\n      setTimeout(() => setUploadPercentage(0),3000);\r\n      setTimeout(() => setMessage(''), 3000);\r\n\r\n      setMessage('קורסים נטענו בהצלחה')\r\n      setMessageVariant('success')\r\n    } \r\n    catch (err) \r\n    {\r\n      fileUploadSuccess = false\r\n      if (err.response.status === 500)\r\n      {\r\n        setMessage('יש בעיה בשרת')\r\n        setMessageVariant('danger')\r\n      }\r\n      else if (err.response.status === 400)\r\n      {\r\n        setMessage('יש להעלות קובץ PDF')\r\n        setMessageVariant('warning')\r\n      }\r\n      else \r\n      {\r\n        setMessage('שגיאה');\r\n        setMessageVariant('info')\r\n      }\r\n      setUploadPercentage(0)\r\n    }\r\n    finally{\r\n      setShowSpinner(false)\r\n      if(fileUploadSuccess){\r\n        onSubmit(year, semester) //fetch courses from database\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {show?\r\n        <div className='mx-auto' style={uploadStyle}>\r\n          {message ? <Alert variant={messageVariant} >{message}</Alert> : null}\r\n          {uploadPercentage === 100 ? <Alert variant='info' >הקובץ הועלה, קורסים נטענים...</Alert> : null}\r\n\r\n          <form onSubmit={onSubmit} style={{textAlign:'center'}} >\r\n            <div className='custom-file mb-'>\r\n              <input\r\n                type='file'\r\n                className='custom-file-input'\r\n                size=\"lg\"\r\n                id='customFile'\r\n                onChange={onChange}\r\n              />\r\n              <label className='custom-file-label' htmlFor='customFile'>\r\n                {filename} <i className='bi bi-file-earmark-pdf-fill'></i>\r\n              </label>\r\n            </div> <hr/>\r\n\r\n            <Select \r\n              onChange={(e) => {\r\n                  setYear(e.value)\r\n              }}\r\n              placeHolder=\"שנת לימודים\"\r\n              options={degreeYear}\r\n              defaultValue={ degreeYear[0] }\r\n            /> <br/>\r\n            <Select \r\n              placeHolder=\"סמסטר\"\r\n              options={degreeSemester}\r\n              defaultValue={ degreeSemester[0] }\r\n              onChange={(e) => {\r\n                  setSemester(e.value)\r\n              }}\r\n            /> <hr/>\r\n\r\n            <ProgressBar animated variant=\"success\" now={uploadPercentage} label={`${uploadPercentage}%`}/><br/>\r\n            <div className=\"d-grid gap-5\">\r\n              <Button type='submit' onClick={handleSubmit} >\r\n                {showSpinner? <Spinner as=\"span\" animation=\"border\" variant=\"dark\"/> : 'העלאה'}\r\n              </Button>\r\n            </div>\r\n            \r\n          </form>\r\n        </div>\r\n      : null}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst uploadStyle = {\r\n  color: 'black',\r\n  width: '1000px',\r\n  padding: \"80px\",\r\n  fontFamily: 'Calibri light',\r\n  fontSize:'22px'\r\n};\r\n\r\nexport default UploadForm;","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Home.js",["138","139","140"],"import SchedulerTable from './Scheduler'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Cards from './Cards'\r\n\r\nconst Home = ({show, publishedSchedulersData}) => { \r\n    return (\r\n        <>\r\n            {show?\r\n                <div style={{height:'100%'}}>\r\n                    <div style={{height:\"calc(100% - 64px)\", overflowY:\"scroll\"}} >\r\n                        <Cards/>\r\n                        <hr/>\r\n                        <h2 style={{fontFamily: 'Calibri light', paddingRight: '15px'}}>\r\n                            מערכות שעות שפורסמו ע''י סטודנטים: \r\n                        </h2>\r\n                        <hr/>\r\n\r\n                        \r\n                        {publishedSchedulersData?.map((schedulerData, idx) => (\r\n                            <Container key={idx} fluid style={{paddingLeft: '250px', paddingRight: '250px'}}>\r\n                                <div style={{padding: '8px', fontSize: '21px'}}>\r\n                                    <img src={schedulerData['photoURL']} style={{width:\"3.5rem\",height:\"3.5rem\", borderRadius: '50%'}}/>\r\n                                    {\" \"} הועלה ע\"י {schedulerData['displayName']}  ({schedulerData['year']},  {schedulerData['semester']})\r\n                                </div>\r\n\r\n                                <SchedulerTable data={schedulerData['schedulerData']} height='800'/>\r\n                                <br/>\r\n                                <hr/>\r\n                            </Container>\r\n                         ))}\r\n                        \r\n                    </div>\r\n                </div>\r\n            : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectDoneCourses.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\ScheduleCourses.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"import React, { useState, useEffect} from 'react'\r\nimport SelectGroup from './SelectGroup'\r\nimport PostInputModal from './PostInputModal'\r\nimport SchedulerTable from './Scheduler'\r\nimport SelectUsers from './SelectUsers'\r\nimport { Container, Row, Col, FormGroup, Button } from 'react-bootstrap'\r\nimport Select from 'react-select'\r\nimport axios from 'axios';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst schedulerYear=2020;\r\nconst schedulerMonth=10;\r\n\r\nfunction ScheduleCourses({show, user, users, userHaveSchedulerData, mandatoryCourses, electiveCourses}) {\r\n\r\n  const [courses, setCourses] = useState();\r\n  const [currentCourse, setCurrentCourse] = useState();\r\n  //const [coursesData, setCoursesData] = useState();\r\n  //const [groupsData, setGroupsData] = useState(null);\r\n  const [groups, setGroups] = useState();\r\n  const [section, setSection] = useState();\r\n  const [semester, setSemester] = useState();\r\n  const [schedulerData, setSchedulerData] = useState([]);\r\n  //const [selectedGroups, setSelectedGroups] = useState([]);\r\n  const [exercise, setExercise] = useState();\r\n  const [allExercises, setAllExercises] = useState();\r\n  //const [exerciseTimes, setExerciseTimes] = useState([]);\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const [showApprovalAlarm, setShowApprovalAlarm] = useState(false)\r\n  const [approvalAlarmMessage, setApprovalAlarmMessage] = useState('')\r\n\r\n  const [showUsers, setShowUsers] = useState(false)\r\n\r\n  const [alarmVariant, setAlarmVariant] = useState('');\r\n  const [showPostInput, setShowPostInput] = useState(false);\r\n  const [currYear, setCurrYear] = useState(null);\r\n  const [currSemester, setCurrSemester] = useState(null);\r\n\r\n  \r\n  const hedvaOne = 'חדו\"א 1'\r\n  const hedvaTwo = 'חדו\"א 2'\r\n\r\n\r\n  useEffect(async () => {\r\n    if(userHaveSchedulerData)\r\n      await fetchUserSchedulerData(user.uid)\r\n  }, [userHaveSchedulerData]);\r\n\r\n  const fetchUserSchedulerData = async (uid) => {\r\n    var url = '/userSchedulerData/' + uid \r\n    const res = await fetch(url)\r\n    const data = await res.json()\r\n    setSchedulerData(data.schedulerData)\r\n  }\r\n\r\n  const coursePrerequisitesDone = (courses, e, id) => {\r\n    let coursesPrerequisitesDone = true\r\n    let newCourse = courses[id]\r\n    //check if NewCourse's prerequisites are done courses \r\n    if(newCourse.prerequisites != null){\r\n        newCourse.prerequisites.map(courseName => {\r\n            courses.map(course => {\r\n                if(newCourse.id !== course.id)\r\n                {\r\n                    //if course is in this state => course NOT done.\r\n                    if(course.title === courseName){\r\n                        handleAlarm('warning', 'הקורס \"' + course.title + '\" בדרישות הקדם של \"' + newCourse.title + '\" .ולכן צריך להוסיף אותו למע\\' השעות ')\r\n                        coursesPrerequisitesDone = false\r\n                        return //exit from mapping\r\n                    }\r\n                }\r\n    })\r\n\r\n        if(coursesPrerequisitesDone == false){\r\n            e.preventDefault() //cancel the check in checkbox\r\n            return //exit from mapping\r\n        }\r\n      })\r\n    }\r\n\r\n    return coursesPrerequisitesDone\r\n  }\r\n\r\n  const checkCourseParallelReqs = (courses, e, id) => {\r\n    let newCourse = courses[id]\r\n    //check NewCourse's parrallel requests \r\n    if(newCourse.parrallelReqs != null){\r\n      newCourse.parrallelReqs.map(courseName => {\r\n        courses.map(course => {\r\n          //if course is in this state => course NOT done.\r\n          if(course.title === courseName){\r\n            alert('לקורס \": \"' + newCourse.title + '\"יש דרישת לימוד במקביל עם הקורס: ' + course.title + '\" נוסיף אותו למע\\' השעות.')\r\n            this.onChecked(e, course.id)\r\n            return //exit from mapping\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const checkPrerequisites = (courseFromNewsletter, coursesFromNewsletter) => {\r\n    let prerequisites = courseFromNewsletter['prerequisites']\r\n    if (prerequisites == undefined || prerequisites == '') return\r\n\r\n    prerequisites = prerequisites.split(' ').join('')\r\n\r\n    const coursesNames = mandatoryCourses.map(course => course.title) //courses title \r\n    const doneCoursesNames = mandatoryCourses.filter(course => course['done'] == true).map(course => course['title']) //courses title done\r\n\r\n\r\n    coursesNames.forEach(courseName => {\r\n      if (prerequisites.includes(courseName.split(' ').join('')) &&  !doneCoursesNames.includes(courseName)){\r\n        handleAlarm('warning', `הקורס ${courseName} הוא תנאי קדם לקורס ${courseFromNewsletter['title']}, עליך לקבל בו ציון עובר`)\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkParallelReqs = (courseFromNewsletter, coursesFromNewsletter) => {\r\n    let parallelReqs = courseFromNewsletter['parallelReqs']\r\n    if (parallelReqs == undefined || parallelReqs == '') return\r\n\r\n    parallelReqs = parallelReqs.split(' ').join('')\r\n\r\n    //const dependenciesStrTemp = prerequisetes.replace(' ', '')\r\n\r\n\r\n    const coursesNames = coursesFromNewsletter.map(course => course.title) //courses title \r\n    const doneCoursesNames = coursesFromNewsletter.filter(course => course['done'] == true).map(course => course['title']) //courses title done\r\n    const checkedSchedulerCourses = schedulerData.map(course => course.title)\r\n    const schedulerCoursesNaming = checkedSchedulerCourses.map(courseName => courseName == \"חשבון דיפרנציאלי ואינטגרלי 2\" ? hedvaTwo  : courseName)\r\n    const schedulerCoursesNamingSec = schedulerCoursesNaming.map(courseName => courseName == \"חשבון דיפרנציאלי ואינטגרלי 1\" ? hedvaOne  : courseName);\r\n    const schedulerCoursesName = schedulerCoursesNamingSec.map(courseName => courseName.replace('++ ', '++').replace('  ', ' '));\r\n\r\n    //if course from newsletter is done, don't show it \r\n\r\n    //let parrallelCoursesNames = []\r\n\r\n    coursesNames.forEach(courseName => {\r\n      if (parallelReqs.includes(courseName.split(' ').join('')) &&  !doneCoursesNames.includes(courseName) && !schedulerCoursesName.includes(courseName.replace('++ ', '++').replace('  ', ' '))){\r\n        //parrallelCoursesNames = parrallelCoursesNames.push(courseName)\r\n        handleAlarm('warning', `הקורס ${courseName} הוא דרישה מקבילה לקורס ${courseFromNewsletter['title']}`)\r\n      }\r\n    })\r\n  }\r\n\r\n  //add schedulerData check\r\n  // schedulerData.replace(\" \", \"\")\r\n  // schedulerData.name.includes(courseName)\r\n\r\n  // add courseName to list and than alarm of all courses names.\r\n\r\n\r\n  //group can be on 2 days or more\r\n  const getStringOfGroupTime = (group) => {\r\n    return (group.endDate.getHours() + \":\" + group.endDate.getMinutes() + \" - \" + group.startDate.getHours() + \":\" + group.startDate.getMinutes())\r\n  }\r\n\r\n  const isOverlappingGroups = (group1, group2) => {\r\n    if((group1.startDate <= group2.endDate) && (group2.startDate <= group1.endDate)){\r\n        return true;\r\n    }\r\n    return false\r\n  }\r\n\r\n  const groupOverlap = (group) => { \r\n    let groupOverlap = false\r\n    //check if newCourse time overlap with other checked courses\r\n    group.map(groupDay => {\r\n      schedulerData.map(schedulerGroupDay => {\r\n        if(!(schedulerGroupDay instanceof Date))\r\n        {\r\n          schedulerGroupDay.startDate = new Date(schedulerGroupDay.startDate)\r\n          schedulerGroupDay.endDate = new Date(schedulerGroupDay.endDate)\r\n        }\r\n        groupOverlap = isOverlappingGroups(groupDay, schedulerGroupDay)\r\n        if(groupOverlap)\r\n        {\r\n          handleAlarm(\"warning\", 'הקורס \"' + groupDay.title + '\" חופף עם הקורס \"' + schedulerGroupDay.title + '\" (שעת הקורס: ' + getStringOfGroupTime(groupDay) + ')')\r\n          return groupOverlap//exit from mapping\r\n        }\r\n      })\r\n      if(groupOverlap)\r\n        return groupOverlap\r\n    })\r\n    return groupOverlap\r\n  }\r\n\r\n  const validateDependancies = (crawlerCourse) => {\r\n    if(!crawlerCourse.checked)\r\n      return\r\n\r\n    //check if elective or mandatory\r\n    const courseType = crawlerCourse.courseType\r\n    let courseFromNewsletter\r\n    const hedvaOneCheck = 'חדו\\\"א 1'\r\n    const hedvaTwoCheck = 'חדו\\\"א 2'\r\n    let crawlerCourseTitle = crawlerCourse.title\r\n    crawlerCourseTitle = crawlerCourseTitle == \"חשבון דיפרנציאלי ואינטגרלי 2\" ? hedvaTwoCheck  : crawlerCourseTitle\r\n    crawlerCourseTitle = crawlerCourseTitle == \"חשבון דיפרנציאלי ואינטגרלי 1\" ? hedvaOneCheck  : crawlerCourseTitle\r\n\r\n    if(courseType === 'Mandatory')\r\n    {\r\n      courseFromNewsletter = mandatoryCourses.find(course => course['title'].replace('++ ', '++').replace('  ', ' ') == crawlerCourseTitle)\r\n      if(courseFromNewsletter == undefined){\r\n        return\r\n      }\r\n\r\n      // add additional check\r\n      checkPrerequisites(courseFromNewsletter, mandatoryCourses)\r\n      checkParallelReqs(courseFromNewsletter, mandatoryCourses)\r\n    }\r\n    if(courseType === 'Elective')\r\n    {\r\n      courseFromNewsletter = electiveCourses.find(course => course['title'].replace('\"', '').replace('++ ', '++').replace('  ', ' ')  == crawlerCourseTitle)\r\n      if(courseFromNewsletter == undefined){\r\n        return\r\n      }\r\n      // add additional check\r\n      checkPrerequisites(courseFromNewsletter, electiveCourses)\r\n    }\r\n  }\r\n\r\n    const getExercise = (groupId) => {\r\n      axios.get('http://localhost:3000/relevantExercise', {\r\n      params: {\r\n        groupId: groupId,\r\n      }\r\n    }).then(res => {\r\n        const exerciseDataRes = res.data;\r\n\r\n        for(const [group_id, group_] of Object.entries(exerciseDataRes))\r\n          group_.forEach(function(groupDay, index) {\r\n            groupDay.checked = false\r\n        });\r\n\r\n        schedulerData.forEach(function(group_, index) {\r\n          if(exerciseDataRes[group_.groupId])\r\n          {\r\n            exerciseDataRes[group_.groupId].forEach(function(groupDay, index) {\r\n              groupDay.checked = true\r\n           });\r\n\r\n            console.log(\"found exercise check\")\r\n\r\n          }\r\n       });\r\n\r\n        console.log(\"exercises: \", exerciseDataRes)\r\n        setExercise(exerciseDataRes);\r\n\r\n        const newAllExercises = {...allExercises, ...exerciseDataRes}\r\n        console.log(\"all exersices: \", newAllExercises)\r\n        setAllExercises(newAllExercises);\r\n      });\r\n  }\r\n\r\n  const courseClicked = (e, courseId) => {\r\n  let unCheckedCurrentCourse = false;\r\n    courses.forEach((course) => {\r\n        if(course.id !== courseId) {\r\n            course.checked = false;\r\n        }\r\n        else {\r\n            course.checked = !course.checked\r\n            if(course.checked == false) unCheckedCurrentCourse = true\r\n        }\r\n    })\r\n    if(unCheckedCurrentCourse == true){\r\n        setGroups(null);\r\n        setExercise(null);\r\n        setSchedulerData(schedulerData.filter(data => data.id !== courseId));\r\n        setExercise(null);\r\n        setAllExercises(null);\r\n        return;\r\n    }\r\n\r\n    setCurrentCourse(courseId)\r\n    setExercise(null);\r\n\r\n\r\n    const course = courses.find(course => course.id == courseId)\r\n\r\n    axios.get('/relevantGroups', {\r\n      params: {\r\n        courseId: courseId,\r\n        semester: semester\r\n      }\r\n    }).then(res => {\r\n        const groupsData = res.data;\r\n\r\n        for(const [group_id, group_] of Object.entries(groupsData))\r\n          group_.forEach(function(groupDay, index) {\r\n            groupDay.checked = false\r\n        });\r\n\r\n        schedulerData.forEach(function(group_, index) {\r\n          if(groupsData[group_.groupId])\r\n          {\r\n\r\n            groupsData[group_.groupId].forEach(function(groupDay, index) {\r\n              groupDay.checked = true\r\n           });\r\n\r\n            console.log(\"found group check\")\r\n\r\n          }\r\n       });\r\n        \r\n        console.log(\"Groups: \", groupsData)\r\n        setGroups(groupsData);\r\n        validateDependancies(course);\r\n      });\r\n  }\r\n\r\n  const groupClicked =(e, groupId) => {\r\n    let group = groups[groupId]\r\n\r\n    for (const [group_id, group_] of Object.entries(groups))\r\n      group_.forEach(function(groupDay, index) {\r\n        if(Number(group_id) != groupId)\r\n        {\r\n          if(groupDay.checked)\r\n          {\r\n            setSchedulerData(schedulerData.filter(data => data.id !== groupDay.course_number))\r\n          }\r\n          groupDay.checked = false\r\n        }\r\n        else\r\n          groupDay.checked = !groupDay.checked\r\n     });\r\n\r\n     group = groups[groupId]\r\n\r\n     if(group[0].checked === false)\r\n     {\r\n       setSchedulerData(schedulerData.filter(data => data.id !== group[0].course_number))\r\n\r\n       if(allExercises){\r\n        for (const [group_id, group_] of Object.entries(allExercises))\r\n          group_.forEach(function(groupDay, index) {\r\n            if(groupDay.course_number == group[0].course_number)\r\n              groupDay.checked = false\r\n            });\r\n       }\r\n       \r\n       return\r\n      }\r\n\r\n\r\n    const courseType = getCourseType()\r\n    let fullGroupData = group.map((v, index) => ({\r\n        title: v['name'],\r\n        checked: true,\r\n        id: v['course_number'],\r\n        groupId: groupId,\r\n        startDate: new Date(schedulerYear, schedulerMonth, v['day'], v['start_hour'], v['start_min']),\r\n        endDate: new Date(schedulerYear, schedulerMonth, v['day'], v['end_hour'],  v['end_min']),\r\n        exercise: false,\r\n        courseType: courseType\r\n    }))\r\n\r\n    groupOverlap(fullGroupData)\r\n\r\n\r\n\r\n    const existingCourse = schedulerData.some(groupTime =>  groupTime.id == group[0]['course_number'] )\r\n    if (existingCourse == true) {\r\n        const removeCourse = schedulerData.filter(groupTime =>  groupTime.id != group[0]['course_number'] && groupTime.exercise == false )\r\n        fullGroupData = fullGroupData.concat(removeCourse)\r\n    }\r\n    else {\r\n      fullGroupData = fullGroupData.concat(schedulerData)\r\n    }\r\n\r\n    getExercise(groupId)\r\n    setSchedulerData(fullGroupData)\r\n  }\r\n\r\n  const exerciseClicked =(e, groupId) => {\r\n    let group = allExercises[groupId]\r\n    const courseNumber = group[0].course_number\r\n    console.log(\"exercises clicked: \", group)\r\n\r\n    for (const [group_id, group_] of Object.entries(allExercises))\r\n      group_.forEach(function(groupDay, index) {\r\n        if (groupDay.course_number == courseNumber){\r\n            if(Number(group_id) != groupId)\r\n              groupDay.checked = false\r\n            else\r\n              groupDay.checked = !groupDay.checked\r\n        }\r\n     });\r\n\r\n     group = allExercises[groupId]\r\n\r\n     if(group[0].checked === false)\r\n     {\r\n       setSchedulerData(schedulerData.filter(data => data.groupId != groupId))\r\n       return\r\n     }\r\n\r\n    let details = group.map((v, index) => ({\r\n        title: v['name'],\r\n        checked: true,\r\n        id: v['course_number'],\r\n        groupId: groupId,\r\n        startDate: new Date(schedulerYear, schedulerMonth, v['day'], v['start_hour'], v['start_min']),\r\n        endDate: new Date(schedulerYear, schedulerMonth, v['day'], v['end_hour'],  v['end_min']),\r\n        exercise: true\r\n    }))\r\n    groupOverlap(details)\r\n\r\n\r\n    const existingCourse = schedulerData.some(exerciseTime =>  exerciseTime.id == group[0]['course_number'] && exerciseTime.exercise == true )\r\n    if (existingCourse == true) {\r\n        const removeCourse = schedulerData.filter(exerciseTime =>  exerciseTime.id != group[0]['course_number'] || exerciseTime.exercise != true )\r\n        details = details.concat(removeCourse)\r\n    }\r\n    else {\r\n      details = details.concat(schedulerData)\r\n    }\r\n\r\n    setSchedulerData(details)\r\n\r\n    //add to scheduler data the new group/exercise\r\n\r\n    //details = details.concat(exerciseTimes)\r\n    //setExerciseTimes(details)\r\n\r\n\r\n    //const schedulerDataNew = schedulerData.filter(exerciseTime =>  exerciseTime.id != group[0]['course_number'] || exerciseTime.exercise == false )\r\n    //console.log(\"entering schudeler Data: \", details.concat(schedulerDataNew))\r\n    //setSchedulerData(details.concat(schedulerDataNew))\r\n  }\r\n\r\n\r\n  const sectionChange = (event) => {\r\n    setSection(event.value)\r\n  }\r\n\r\n  const semesterChange = (event) => {\r\n    setSemester(event.value)\r\n  }\r\n\r\n  const getCourseType = () => {\r\n    let courseType\r\n    if(section >= 1 && section <= 3)\r\n      courseType = \"Mandatory\"\r\n    else if(section >= 4 && section <= 6)\r\n      courseType = \"Elective\"\r\n    else if(section === 7)\r\n      courseType = \"Sadna\"\r\n\r\n    return courseType\r\n  }\r\n\r\n   let cleanData = (e) => {\r\n    e.preventDefault();\r\n    setSchedulerData([]);\r\n    setExercise(null);\r\n    setAllExercises(null);\r\n    setGroups(null)\r\n    }\r\n\r\n  let submit = (e) => {\r\n    e.preventDefault();\r\n    setExercise(null);\r\n    setAllExercises(null);\r\n    setGroups(null)\r\n\r\n    const courseType = getCourseType()\r\n\r\n    if (section == null || semester == null){\r\n        handleAlarm('warning', 'חסרים פרטים.')\r\n    }\r\n    axios.get('http://localhost:3000/relevantCourses', {\r\n      params: {\r\n        section: section,\r\n        semester: semester\r\n      }\r\n    }).then(res => {\r\n        const coursesData = res.data;\r\n        //setCoursesData(coursesData);\r\n        let coursesNames = []\r\n        coursesData.forEach(course => coursesNames.push(\r\n          { id: course.course_number, \r\n            title: course.course_name, \r\n            checked: false, \r\n            courseType: courseType\r\n          }))\r\n        setCourses(coursesNames);\r\n      });\r\n  }\r\n    const degreeYear = [\r\n        { value: 1, label: 'חובה - שנה ראשונה'},\r\n        { value: 2, label: 'חובה - שנה שנייה'},\r\n        { value: 3, label: 'חובה - שנה שלישית'},\r\n        { value: 4, label: 'בחירה - מדעי המחשב'},\r\n        { value: 5, label: 'בחירה - מדעים'},\r\n        { value: 6, label: 'בחירה מתמטיקה'},\r\n        { value: 7, label: 'סדנאות'},\r\n        { value: 8, label: 'אנגלית'},\r\n        ]\r\n\r\n    const degreeSemester = [\r\n      { value: 1, label:'סמסטר א\\''},\r\n      { value: 2, label: 'סמסטר ב\\''},\r\n      { value: 3, label: 'קיץ'},\r\n    ]\r\n\r\nconst isSchedulerActionValid = () => {\r\n  var isValid = true\r\n  if(!user)\r\n  {\r\n    handleAlarm('warning', 'התחבר/י על מנת להמשיך')\r\n    isValid = false\r\n  }\r\n  if(schedulerData.length === 0)\r\n  {\r\n    handleAlarm('warning', 'לא שובצו קורסים למערכת השעות')\r\n    isValid = false\r\n  }\r\n  return isValid\r\n}\r\n\r\nconst postSchedulerData = async (url) => {\r\n  const photoURL = user.photoURL\r\n  const displayName = user.displayName\r\n  axios({\r\n    method: 'post',\r\n    url: url,\r\n    data: {\r\n      schedulerData: {schedulerData},\r\n      photoURL: {photoURL},\r\n      displayName: {displayName},\r\n      year: {currYear},\r\n      semester: {currSemester}\r\n    }\r\n  });\r\n}\r\n\r\nconst handleSchedulerPublish = () => {\r\n  if(isSchedulerActionValid()) \r\n  {\r\n    var url = '/publishSchedulerData'\r\n    postSchedulerData(url)\r\n    handleAlarm('success', 'מערכת שעות פורסמה בהצלחה, ניתן לראותה בדף הבית')\r\n  }\r\n}\r\n\r\nconst handleSchedulerSave = () => {\r\n  if(isSchedulerActionValid()) {\r\n    var url = '/saveUserScheduleData/' + user.uid \r\n    postSchedulerData(url)\r\n    handleAlarm('success', 'מערכת שעות נשמרה בהצלחה')\r\n  }\r\n}\r\n\r\nconst onUserClick = (e, uid) => {\r\n  console.log(\"Clicked: \", uid)\r\n  var url = '/sharedSchedulersData/' + uid\r\n  postSchedulerData(url)\r\n  setShowUsers(false)\r\n  handleAlarm('success', 'מערכת שעות שותפה בהצלחה')\r\n}\r\n\r\nconst handleSchedulerShare = () => {\r\n  if(isSchedulerActionValid()) {\r\n    setShowUsers(true)\r\n  }\r\n}\r\n\r\nconst handleApprovalAlarm = (variant, text) => {\r\n  setShowApprovalAlarm(true)\r\n  setApprovalAlarmMessage(text)\r\n  setAlarmVariant(variant)\r\n}\r\n\r\nconst handleAlarm = (variant, text) => {\r\n  setTimeout(() => setMessage(''), 10000);\r\n  setMessage(text)\r\n  setAlarmVariant(variant)\r\n}\r\n\r\nreturn (\r\n  <div style={{height:'100%'}}>\r\n    <div style={{height:\"calc(100% - 64px)\", overflowY:\"scroll\"}}>\r\n      {show?\r\n        <>\r\n        <div style={{fontFamily: 'Calibri', fontSize: '24px'}}>\r\n          {message ? <Alert variant={alarmVariant} >{message}</Alert> : null}\r\n\r\n          <Alert \r\n          show={showApprovalAlarm} \r\n          variant={alarmVariant}\r\n          onClose={() => setShowApprovalAlarm(false)} \r\n          dismissible>\r\n            <Alert.Heading>{approvalAlarmMessage}</Alert.Heading>\r\n            <hr/>\r\n            <div className=\"d-flex justify-content-start\">\r\n              <Button \r\n                variant=\"outline-success\"\r\n                onClick={() => {\r\n                  setShowApprovalAlarm(false)\r\n                  handleSchedulerPublish()}} >\r\n                אישור\r\n              </Button>{' '}\r\n              <Button \r\n                variant=\"outline-danger\"\r\n                onClick={() => setShowApprovalAlarm(false)}>\r\n                סגירה\r\n              </Button>\r\n            </div>\r\n          </Alert>\r\n        </div>\r\n\r\n        <SelectUsers\r\n          show={showUsers}\r\n          onHide={() => setShowUsers(false)}\r\n          user={user}\r\n          users={users}\r\n          onChecked={onUserClick}\r\n        />\r\n\r\n        <PostInputModal\r\n          show={showPostInput}\r\n          onHide={() => setShowPostInput(false)}\r\n          setYear={setCurrYear}\r\n          setSemester={setCurrSemester}\r\n        />\r\n\r\n        <Container fluid>\r\n            <Row md={2}>\r\n                <Col>\r\n                  <Container style={{padding: '20px'}}>\r\n                    <Row>\r\n                      <Col sm={2}>\r\n                        <ButtonGroup vertical size=\"lg\">\r\n                          <Button\r\n                            variant=\"info\"\r\n                            onClick={() => \r\n                            {\r\n                              if(!currYear && !currSemester)\r\n                                setShowPostInput(true)\r\n                              handleApprovalAlarm('info', 'פרסום מערכת השעות יגרום לפרטים אישיים להפוך לציבוריים. האם להמשיך?')\r\n                            }}>\r\n                                פרסום\r\n                          </Button>\r\n                          <Button \r\n                            variant=\"info\"\r\n                            onClick={() => {\r\n                              handleSchedulerShare()\r\n                              if(!currYear && !currSemester)\r\n                                setShowPostInput(true)\r\n                            }}>\r\n                                שיתוף\r\n                          </Button>\r\n                          <Button \r\n                            variant=\"info\"\r\n                            onClick={handleSchedulerSave}>\r\n                                שמירה\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      </Col>\r\n                      <Col sm={10}>\r\n                        <form onSubmit={submit} className='mx-auto' style={formStyle}>\r\n                          <FormGroup role=\"form\">\r\n\r\n                            <Select class=\"form-control\" id=\"section\"\r\n                              menuPlacement=\"auto\"\r\n                              placeholder=\"שנת לימודים\"\r\n                              options={degreeYear}\r\n                              onChange={sectionChange}\r\n                            />\r\n                            <Select class=\"form-control\" id=\"semester\"\r\n                              menuPlacement=\"auto\"\r\n                              placeholder=\"סמסטר\"\r\n                              options={degreeSemester}\r\n                              onChange={semesterChange}\r\n                            />\r\n                            <div className=\"d-grid gap-2\"></div>\r\n                            <Button \r\n                              variant=\"info\"\r\n                              size=\"lg\"\r\n                              type=\"submit\">\r\n                                בחר/י\r\n                            </Button>\r\n                             <Button\r\n                              style={{marginRight:\"60px\"}}\r\n                              variant=\"info\"\r\n                              size=\"lg\"\r\n                              onClick={cleanData}\r\n                              type=\"clean\">\r\n                                ניקוי מערכת שעות\r\n                            </Button>\r\n                          </FormGroup>\r\n\r\n                        </form>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                  <hr/>\r\n                  <SelectGroup\r\n                    courses={courses}\r\n                    groups={groups}\r\n                    exercise={exercise}\r\n                    exerciseData={allExercises}\r\n                    schedulerData={schedulerData}\r\n                    onCourseClicked={courseClicked}\r\n                    onGroupClicked={groupClicked}\r\n                    onExerciseClicked={exerciseClicked}\r\n                    currentCourse={currentCourse}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <SchedulerTable data={schedulerData} height='1150' />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    \r\n      </>\r\n      : null}\r\n    </div>\r\n  </div>\r\n)\r\n}\r\n\r\nconst formStyle = {\r\n  color: 'black',\r\n  width: '600px',\r\n  textAlign: 'center',\r\n  fontFamily: 'Calibri',\r\n  fontSize:'20px'\r\n};\r\n\r\nexport default ScheduleCourses","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\Navbar.style.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Login.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\HandleDatabase.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Scheduler.js",["191","192","193"],"import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ViewState } from \"@devexpress/dx-react-scheduler\";\r\nimport { Resources } from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { Scheduler, WeekView, Appointments, AppointmentTooltip } \r\nfrom \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { blue, orange, green } from \"@material-ui/core/colors\";\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst theme = createMuiTheme({ palette: { type: \"dark\" } });\r\nconst COURSE_TYPES = ['Mandatory', 'Elective', 'Sadna'];\r\nconst resources = [{\r\n  fieldName: 'courseType',\r\n  title: 'Course type',\r\n  instances: [\r\n    { id: COURSE_TYPES[0], text: COURSE_TYPES[0], color: blue },\r\n    { id: COURSE_TYPES[1], text: COURSE_TYPES[1], color: orange },\r\n    { id: COURSE_TYPES[2], text: COURSE_TYPES[2], color: green }\r\n  ],\r\n}];\r\n\r\nexport class SchedulerTable extends Component {\r\n  render() {\r\n  const data = this.props.data ?? []\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Paper>\r\n          <Scheduler \r\n            data={data.map((group, index) => ({...group, id: index}))}\r\n            height={this.props.height}\r\n\r\n          >\r\n            <ViewState currentDate=\"2020-11-01\" />\r\n            <WeekView startDayHour={8} endDayHour={21} excludedDays={[6]}/>        \r\n\r\n            <Appointments />\r\n            <AppointmentTooltip />\r\n            \r\n            <Resources\r\n              data={resources}\r\n            />\r\n          </Scheduler>\r\n        </Paper>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SchedulerTable","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Logout.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectUsers.js",["194"],"import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport SelectUser from './SelectUser'\r\n\r\nclass SelectUsers extends Component {\r\n    render() {\r\n        const {show, onHide, user, users, onChecked} = this.props\r\n\r\n        var myUsers = users?.map((myUser) => (\r\n            <SelectUser key={myUser._data.localId} user={myUser._data} onChecked={onChecked} />\r\n        ))\r\n\r\n        return (\r\n            <div>\r\n                <Modal show={show} \r\n                    onHide={onHide}\r\n                    style={modalStyle}\r\n                    >\r\n                        <Modal.Header>\r\n                            <Modal.Title> בחירת משתמש לשיתוף </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{paddingRight:'50px'}} >\r\n                            {myUsers}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={onHide}>\r\n                            סגור\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst modalStyle = {\r\n    direction: 'rtl',\r\n    textAlign: 'right',\r\n    padding: \"80px\",\r\n    fontFamily: 'Calibri light',\r\n    fontSize:'18px'\r\n  };\r\n\r\nexport default SelectUsers","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectCourses.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectGroup.js",["195","196","197","198","199","200"],"import React, { Component } from 'react'\nimport SchedulerCourse from './SchedulerCourse'\nimport Group from './Group'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport CloseButton from 'react-bootstrap/CloseButton'\n\nclass SelectGroup extends Component {\n    render() {\n        const groupBy = (items, key) => items.reduce(\n          (result, item) => ({\n            ...result,\n            [item[key]]: [\n              ...(result[item[key]] || []),\n              item,\n            ],\n          }),\n          {},\n        );\n\n        var courses = this.props.courses != null ? this.props.courses?.map((course, index) => (\n            <SchedulerCourse key={index} course={course} onChecked={this.props.onCourseClicked} />)) : null\n\n        let groups = null;\n        if (this.props.groups != null ){\n           groups = [];\n            for (const [group_id, group] of Object.entries(this.props.groups)) {\n                    groups.push(\n                    <Group \n                        key={group_id} \n                        group={group} \n                        //checked={group.checked}\n                        //{this.props.schedulerData.some(groupTime => groupTime.groupId == Number(group_id))} \n                        onChecked={this.props.onGroupClicked} \n                    />)\n                }\n        }\n\n        let exercise = null;\n        let relevantExercise = null;\n        const relevantExerciseData = {}\n        if(this.props.exerciseData != null && this.props.exercise == null){\n            for (let exerciseTime in this.props.exerciseData) {\n                if (this.props.exerciseData[exerciseTime][0].course_number == this.props.currentCourse){\n                    relevantExerciseData[exerciseTime]= this.props.exerciseData[exerciseTime]\n                }\n            }\n            if (Object.keys(relevantExerciseData).length > 0 ){\n                relevantExercise = relevantExerciseData\n            }\n        }\n        let exerciseInfo = null\n        if(this.props.exercise != null){\n            exerciseInfo = this.props.exercise\n        }\n        else if(relevantExercise != null){\n            exerciseInfo = relevantExercise\n        }\n\n        if (exerciseInfo != null){\n           exercise = [];\n            for (const [group_id, group] of Object.entries(exerciseInfo)) {\n                    exercise.push(\n                    <Group \n                        key={group_id} \n                        group={group} \n                        onChecked={this.props.onExerciseClicked}\n                    />)\n                }\n        }\n\n\n\n        let summary= [];\n        if (this.props.schedulerData != null && this.props.schedulerData.length > 0){\n           const grouped = groupBy(this.props.schedulerData, 'id')\n           for (const [id, groupData] of Object.entries(grouped)) {\n                const group = groupData.find(data=> data.id == Number(id) && data.exercise == false) ?? groupData[0]\n                const exercise = groupData.find(data=> data.id == Number(id) && data.exercise == true)\n                const exerciseStr = exercise != null ? 'וקבוצת תרגול ' + exercise.groupId  : ''\n                summary.push(\n                <div style={{fontFamily: 'Calibri light'}}>\n                    <h4 key={id}> \n                    <hr/>\n                        {group.title}{' '}({id}) מספר קבוצה {group.groupId} {exerciseStr}\n                    </h4>\n                </div>)\n            }\n        }\n\n\n        return (\n            <div>\n                <Container>\n                    <Row md={3}>\n                        <Col>\n                            {courses?\n                            <>\n                                <h4 style={{textDecoration: 'underline'}}>קורסים</h4> {courses}\n                            </>\n                            : null }\n                        </Col>\n\n                        <Col>\n                            {groups?\n                            <>\n                                <h4 style={{textDecoration: 'underline'}}>קבוצות אפשריות</h4> {groups}\n                            </>\n                            : null }\n                        </Col>\n\n                        <Col>\n                            {exercise?\n                            <>\n                                <h4 style={{textDecoration: 'underline'}}>תרגולים מתאימים</h4> {exercise}\n                            </>\n                            : null }\n                        </Col>\n                    </Row>\n                </Container>\n\n\n                            {summary.length>0?\n                            <>\n                                <h4 style={{textDecoration: 'underline', textAlign: 'center', fontFamily: 'Calibri'}}>סיכום</h4> {summary}\n                            </>\n                            : null }\n            </div>\n        )\n    }\n}\n\nexport default SelectGroup","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\PostInputModal.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Cards.js",["201","202","203"],"import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Cards() {\r\n    return (\r\n        <div className=\"text-center\" style={{padding: '50px'}}>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Card border=\"success\" style={cardStyle}>\r\n                        <Card.Header as=\"h5\">שלב ראשון</Card.Header>\r\n                        <Card.Img variant=\"top\" src=\"img/cards/upload.png\" />\r\n                        <Card.Body>\r\n                        <Card.Title>ידיעון לימודים</Card.Title>\r\n                        <Card.Text>\r\n                            העלאת קובץ pdf של ידיעון הלימודים\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={1}>\r\n                    <br/><br/><br/><br/><br/><br/>\r\n                    <h1 className='bi bi-chevron-double-left'></h1>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card border=\"warning\" style={cardStyle}>\r\n                        <Card.Header as=\"h5\">שלב שני</Card.Header>\r\n                        <Card.Img variant=\"top\" src=\"img/cards/selectCourses.png\" />\r\n                        <Card.Body>\r\n                        <Card.Title>קורסים</Card.Title>\r\n                        <Card.Text>\r\n                            בחירת קורסים שהושלמו (ציון עובר)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={1}>\r\n                    <br/><br/><br/><br/><br/><br/>\r\n                    <h1 className='bi bi-chevron-double-left'></h1>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card border=\"danger\" style={cardStyle}>\r\n                        <Card.Header as=\"h5\">שלב שלישי</Card.Header>\r\n                        <Card.Img variant=\"top\" src=\"img/cards/scheduler.png\" />\r\n                        <Card.Body>\r\n                        <Card.Title>מערכת שעות</Card.Title>\r\n                        <Card.Text>\r\n                            בניית מערכת השעות תוך התחשבות בדרישות הקורסים \r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst cardStyle = {\r\n    backgroundColor: '#333', \r\n    color: 'white'\r\n}\r\n\r\nexport default Cards\r\n","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\courses\\DisplayCourses.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\firebase-config.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectCourse.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SelectUser.js",["204"],"import React from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction SelectUser({user, onChecked}) {\r\n    return (\r\n        <div className='mb-1' style={{size: '22px'}}>\r\n            <Button\r\n                variant='outline-secondary' \r\n                size='lg'\r\n                onClick={(e) => {onChecked(e, user.localId)}}>\r\n                {user.photoUrl?\r\n                <>\r\n                <img src={user.photoUrl} style={{width:\"3.5rem\",height:\"3.5rem\", borderRadius: '50%'}}/>\r\n                {\" \"}\r\n                </>\r\n                : null}\r\n                {user.displayName}\r\n            </Button>{' '}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectUser\r\n","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\SchedulerCourse.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\Group.js",["205","206","207","208","209","210","211","212"],"import React, { Component } from 'react'\n\nexport class Group extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {renderDone: true}\n    }\n\n    render() {\n         function onlyOne(checkbox, e, group_id, props) {\n            var checkboxes = document.getElementsByName('checkGroup')\n            checkboxes.forEach((item) => {\n                if (Number(item.id) !== group_id) item.checked = false\n            })\n            props.onChecked(e, group_id)\n        }\n\n        function mapDay(day) {\n            if (day == 1){\n                return 'ראשון'\n            }\n            if (day == 2){\n                return 'שני'\n            }\n            if (day == 3){\n                return 'שלישי'\n            }\n            if (day == 4){\n                return 'רביעי'\n            }\n            if (day == 5){\n                return 'חמישי'\n            }\n            if (day == 6){\n                return 'שישי'\n            }\n        }\n\n\n        let sub_inputs = []\n        const group_id = this.props.group[0]['group_id']\n        const lecturer = this.props.group[0]['lecturer']\n        const is_exercise = this.props.group[0]['is_exercise']\n        const checked = this.props.group[0]['checked']\n        let index = 1\n        this.props.group.forEach(option => {\n            const day = option['day']\n            const end_time = option['end_hour'] + ':' + option['end_min']\n            const start_time = option['start_hour'] + ':' + option['start_min']\n            sub_inputs.push(<li value={index}>{mapDay(day)} משעה {start_time} עד {end_time}</li>)\n            index+=1;\n        })\n        return (\n            <div>\n                <>\n                    <input \n                    type=\"checkbox\" \n                    id={group_id} \n                    checked={checked} \n                    name=\"checkGroup\" \n                    onChange={(e) => {\n                        this.props.onChecked(e, group_id)\n                        this.setState({renderDone: true})\n                        }}/> \n                    {' '} קבוצה {group_id} {is_exercise === 0? 'שיעור': 'תירגול'}\n                    <ol>\n                      {sub_inputs}\n                    </ol>\n                </>\n            </div>\n        )\n    }\n}\n\n//(e) => onlyOne(this, e, group_id, this.props)\nexport default Group\n\n\n\n\n// import React, { Component } from 'react'\n\n// export class Group extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {renderDone: true}\n//     }\n\n//     render() {\n//          function onlyOne(checkbox, e, group_id, props) {\n//             var checkboxes = document.getElementsByName('checkGroup')\n//             checkboxes.forEach((item) => {\n//                 if (Number(item.id) !== group_id) item.checked = false\n//             })\n//             props.onChecked(e, group_id)\n//         }\n\n//         function mapDay(day) {\n//             if (day == 1){\n//                 return 'ראשון'\n//             }\n//             if (day == 2){\n//                 return 'שני'\n//             }\n//             if (day == 3){\n//                 return 'שלישי'\n//             }\n//             if (day == 4){\n//                 return 'רביעי'\n//             }\n//             if (day == 5){\n//                 return 'חמישי'\n//             }\n//             if (day == 6){\n//                 return 'שישי'\n//             }\n//         }\n\n\n//         let sub_inputs = []\n//         const group_id = this.props.group[0]['group_id']\n//         const lecturer = this.props.group[0]['lecturer']\n//         const is_exercise = this.props.group[0]['is_exercise']\n//         const checked = this.props.group[0]['checked']\n//         let index = 1\n//         this.props.group.forEach(option => {\n//             const day = option['day']\n//             const end_time = option['end_hour'] + ':' + option['end_min']\n//             const start_time = option['start_hour'] + ':' + option['start_min']\n//             sub_inputs.push(<li value={index}>{mapDay(day)} משעה {start_time} עד {end_time}</li>)\n//             index+=1;\n//         })\n//         return (\n//             <div>\n//                 <>\n//                     <input \n//                     type=\"checkbox\" \n//                     id={group_id} \n//                     checked={checked} \n//                     name=\"checkGroup\" \n//                     onChange={(e) => {\n//                         this.props.onChecked(e, group_id)\n//                         this.setState({renderDone: true})\n//                         }}/> \n//                     {' '} קבוצה {group_id} {is_exercise === 0? 'שיעור': 'תירגול'}\n//                     {checked? \" checked \":\" not checked \"}\n//                     <ol>\n//                       {sub_inputs}\n//                     </ol>\n//                 </>\n//             </div>\n//         )\n//     }\n// }\n\n// //(e) => onlyOne(this, e, group_id, this.props)\n// export default Group\n\n\n\n","C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\courses\\ElectiveCoursesTable.js",[],"C:\\Users\\User\\Desktop\\sadnaUpdated6\\Sadna2021\\src\\components\\courses\\MandatoryCoursesTable.js",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":31,"column":13,"nodeType":"219","endLine":41,"endColumn":4},{"ruleId":"220","severity":1,"message":"221","line":139,"column":25,"nodeType":"219","messageId":"222","endLine":139,"endColumn":27},{"ruleId":"223","severity":1,"message":"224","line":140,"column":45,"nodeType":"225","messageId":"226","endLine":140,"endColumn":47},{"ruleId":"227","severity":1,"message":"228","line":3,"column":21,"nodeType":"229","messageId":"230","endLine":3,"endColumn":29},{"ruleId":"231","severity":1,"message":"232","line":18,"column":17,"nodeType":"233","endLine":18,"endColumn":53},{"ruleId":"227","severity":1,"message":"234","line":2,"column":21,"nodeType":"229","messageId":"230","endLine":2,"endColumn":24},{"ruleId":"227","severity":1,"message":"235","line":2,"column":26,"nodeType":"229","messageId":"230","endLine":2,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":18,"column":37,"nodeType":"233","endLine":18,"endColumn":137},{"ruleId":"227","severity":1,"message":"238","line":45,"column":13,"nodeType":"229","messageId":"230","endLine":45,"endColumn":16},{"ruleId":"227","severity":1,"message":"234","line":2,"column":21,"nodeType":"229","messageId":"230","endLine":2,"endColumn":24},{"ruleId":"227","severity":1,"message":"235","line":2,"column":26,"nodeType":"229","messageId":"230","endLine":2,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":22,"column":37,"nodeType":"233","endLine":22,"endColumn":137},{"ruleId":"217","severity":1,"message":"218","line":47,"column":13,"nodeType":"219","endLine":50,"endColumn":4},{"ruleId":"217","severity":1,"message":"239","line":50,"column":6,"nodeType":"240","endLine":50,"endColumn":29,"suggestions":"241"},{"ruleId":"227","severity":1,"message":"242","line":59,"column":9,"nodeType":"229","messageId":"230","endLine":59,"endColumn":32},{"ruleId":"220","severity":1,"message":"243","line":64,"column":48,"nodeType":"219","messageId":"244","endLine":64,"endColumn":50},{"ruleId":"220","severity":1,"message":"243","line":65,"column":32,"nodeType":"219","messageId":"244","endLine":65,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":72,"column":25,"nodeType":"245","messageId":"246","endLine":72,"endColumn":31},{"ruleId":"223","severity":1,"message":"224","line":77,"column":37,"nodeType":"225","messageId":"226","endLine":77,"endColumn":39},{"ruleId":"220","severity":1,"message":"221","line":79,"column":13,"nodeType":"245","messageId":"246","endLine":79,"endColumn":19},{"ruleId":"227","severity":1,"message":"247","line":87,"column":9,"nodeType":"229","messageId":"230","endLine":87,"endColumn":32},{"ruleId":"220","severity":1,"message":"221","line":91,"column":46,"nodeType":"219","messageId":"222","endLine":91,"endColumn":48},{"ruleId":"220","severity":1,"message":"243","line":92,"column":28,"nodeType":"219","messageId":"244","endLine":92,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":97,"column":13,"nodeType":"245","messageId":"246","endLine":97,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":106,"column":23,"nodeType":"225","messageId":"226","endLine":106,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":106,"column":53,"nodeType":"225","messageId":"226","endLine":106,"endColumn":55},{"ruleId":"223","severity":1,"message":"224","line":111,"column":79,"nodeType":"225","messageId":"226","endLine":111,"endColumn":81},{"ruleId":"223","severity":1,"message":"224","line":123,"column":22,"nodeType":"225","messageId":"226","endLine":123,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":123,"column":51,"nodeType":"225","messageId":"226","endLine":123,"endColumn":53},{"ruleId":"223","severity":1,"message":"224","line":131,"column":84,"nodeType":"225","messageId":"226","endLine":131,"endColumn":86},{"ruleId":"223","severity":1,"message":"224","line":133,"column":89,"nodeType":"225","messageId":"226","endLine":133,"endColumn":91},{"ruleId":"223","severity":1,"message":"224","line":134,"column":91,"nodeType":"225","messageId":"226","endLine":134,"endColumn":93},{"ruleId":"220","severity":1,"message":"243","line":171,"column":24,"nodeType":"219","messageId":"244","endLine":171,"endColumn":26},{"ruleId":"220","severity":1,"message":"243","line":172,"column":43,"nodeType":"219","messageId":"244","endLine":172,"endColumn":45},{"ruleId":"248","severity":1,"message":"249","line":198,"column":31,"nodeType":"250","messageId":"251","endLine":198,"endColumn":32,"suggestions":"252"},{"ruleId":"248","severity":1,"message":"249","line":199,"column":31,"nodeType":"250","messageId":"251","endLine":199,"endColumn":32,"suggestions":"253"},{"ruleId":"223","severity":1,"message":"224","line":201,"column":45,"nodeType":"225","messageId":"226","endLine":201,"endColumn":47},{"ruleId":"223","severity":1,"message":"224","line":202,"column":45,"nodeType":"225","messageId":"226","endLine":202,"endColumn":47},{"ruleId":"223","severity":1,"message":"224","line":206,"column":118,"nodeType":"225","messageId":"226","endLine":206,"endColumn":120},{"ruleId":"223","severity":1,"message":"224","line":207,"column":31,"nodeType":"225","messageId":"226","endLine":207,"endColumn":33},{"ruleId":"223","severity":1,"message":"224","line":217,"column":135,"nodeType":"225","messageId":"226","endLine":217,"endColumn":137},{"ruleId":"223","severity":1,"message":"224","line":218,"column":31,"nodeType":"225","messageId":"226","endLine":218,"endColumn":33},{"ruleId":"227","severity":1,"message":"254","line":234,"column":20,"nodeType":"229","messageId":"230","endLine":234,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":268,"column":31,"nodeType":"225","messageId":"226","endLine":268,"endColumn":33},{"ruleId":"223","severity":1,"message":"224","line":271,"column":31,"nodeType":"225","messageId":"226","endLine":271,"endColumn":33},{"ruleId":"223","severity":1,"message":"224","line":284,"column":53,"nodeType":"225","messageId":"226","endLine":284,"endColumn":55},{"ruleId":"227","severity":1,"message":"254","line":294,"column":20,"nodeType":"229","messageId":"230","endLine":294,"endColumn":28},{"ruleId":"223","severity":1,"message":"255","line":323,"column":29,"nodeType":"225","messageId":"226","endLine":323,"endColumn":31},{"ruleId":"227","severity":1,"message":"254","line":342,"column":21,"nodeType":"229","messageId":"230","endLine":342,"endColumn":29},{"ruleId":"223","severity":1,"message":"224","line":344,"column":39,"nodeType":"225","messageId":"226","endLine":344,"endColumn":41},{"ruleId":"223","severity":1,"message":"224","line":369,"column":74,"nodeType":"225","messageId":"226","endLine":369,"endColumn":76},{"ruleId":"223","severity":1,"message":"224","line":370,"column":24,"nodeType":"225","messageId":"226","endLine":370,"endColumn":26},{"ruleId":"223","severity":1,"message":"255","line":371,"column":78,"nodeType":"225","messageId":"226","endLine":371,"endColumn":80},{"ruleId":"223","severity":1,"message":"224","line":371,"column":129,"nodeType":"225","messageId":"226","endLine":371,"endColumn":131},{"ruleId":"223","severity":1,"message":"224","line":389,"column":36,"nodeType":"225","messageId":"226","endLine":389,"endColumn":38},{"ruleId":"223","severity":1,"message":"255","line":390,"column":33,"nodeType":"225","messageId":"226","endLine":390,"endColumn":35},{"ruleId":"223","severity":1,"message":"255","line":401,"column":67,"nodeType":"225","messageId":"226","endLine":401,"endColumn":69},{"ruleId":"223","severity":1,"message":"224","line":417,"column":80,"nodeType":"225","messageId":"226","endLine":417,"endColumn":82},{"ruleId":"223","severity":1,"message":"224","line":417,"column":134,"nodeType":"225","messageId":"226","endLine":417,"endColumn":136},{"ruleId":"223","severity":1,"message":"224","line":418,"column":24,"nodeType":"225","messageId":"226","endLine":418,"endColumn":26},{"ruleId":"223","severity":1,"message":"255","line":419,"column":84,"nodeType":"225","messageId":"226","endLine":419,"endColumn":86},{"ruleId":"223","severity":1,"message":"255","line":419,"column":138,"nodeType":"225","messageId":"226","endLine":419,"endColumn":140},{"ruleId":"227","severity":1,"message":"256","line":9,"column":10,"nodeType":"229","messageId":"230","endLine":9,"endColumn":19},{"ruleId":"227","severity":1,"message":"234","line":9,"column":21,"nodeType":"229","messageId":"230","endLine":9,"endColumn":24},{"ruleId":"227","severity":1,"message":"235","line":9,"column":26,"nodeType":"229","messageId":"230","endLine":9,"endColumn":29},{"ruleId":"227","severity":1,"message":"257","line":8,"column":30,"nodeType":"229","messageId":"230","endLine":8,"endColumn":34},{"ruleId":"227","severity":1,"message":"258","line":5,"column":8,"nodeType":"229","messageId":"230","endLine":5,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":43,"column":76,"nodeType":"225","messageId":"226","endLine":43,"endColumn":78},{"ruleId":"223","severity":1,"message":"224","line":77,"column":61,"nodeType":"225","messageId":"226","endLine":77,"endColumn":63},{"ruleId":"223","severity":1,"message":"224","line":77,"column":92,"nodeType":"225","messageId":"226","endLine":77,"endColumn":94},{"ruleId":"223","severity":1,"message":"224","line":78,"column":64,"nodeType":"225","messageId":"226","endLine":78,"endColumn":66},{"ruleId":"223","severity":1,"message":"224","line":78,"column":95,"nodeType":"225","messageId":"226","endLine":78,"endColumn":97},{"ruleId":"227","severity":1,"message":"256","line":3,"column":10,"nodeType":"229","messageId":"230","endLine":3,"endColumn":19},{"ruleId":"231","severity":1,"message":"232","line":25,"column":21,"nodeType":"233","endLine":25,"endColumn":63},{"ruleId":"231","severity":1,"message":"232","line":43,"column":21,"nodeType":"233","endLine":43,"endColumn":63},{"ruleId":"236","severity":1,"message":"237","line":13,"column":17,"nodeType":"233","endLine":13,"endColumn":105},{"ruleId":"227","severity":1,"message":"259","line":10,"column":19,"nodeType":"229","messageId":"230","endLine":10,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":19,"column":21,"nodeType":"225","messageId":"226","endLine":19,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":22,"column":21,"nodeType":"225","messageId":"226","endLine":22,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":25,"column":21,"nodeType":"225","messageId":"226","endLine":25,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":28,"column":21,"nodeType":"225","messageId":"226","endLine":28,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":31,"column":21,"nodeType":"225","messageId":"226","endLine":31,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":34,"column":21,"nodeType":"225","messageId":"226","endLine":34,"endColumn":23},{"ruleId":"227","severity":1,"message":"260","line":42,"column":15,"nodeType":"229","messageId":"230","endLine":42,"endColumn":23},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'CDBInput' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.","ArrayExpression",["263"],"'coursePrerequisitesDone' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'checkCourseParallelReqs' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["264","265"],["266","267"],"'group_id' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Container' is defined but never used.","'user' is assigned a value but never used.","'CloseButton' is defined but never used.","'onlyOne' is defined but never used.","'lecturer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"messageId":"270","fix":"271","desc":"272"},{"messageId":"273","fix":"274","desc":"275"},{"messageId":"270","fix":"276","desc":"272"},{"messageId":"273","fix":"277","desc":"275"},"Update the dependencies array to be: [user.uid, userHaveSchedulerData]",{"range":"278","text":"279"},"removeEscape",{"range":"280","text":"281"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"282","text":"283"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"284","text":"281"},{"range":"285","text":"283"},[1914,1937],"[user.uid, userHaveSchedulerData]",[8026,8027],"",[8026,8026],"\\",[8064,8065],[8064,8064]]